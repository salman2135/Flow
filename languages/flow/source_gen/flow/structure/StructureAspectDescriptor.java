package flow.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(2);
  /*package*/ final ConceptDescriptor myConceptChildConcept = createDescriptorForChildConcept();
  /*package*/ final ConceptDescriptor myConceptRootConcept = createDescriptorForRootConcept();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptChildConcept.getId(), 0);
    myIndexMap.put(myConceptRootConcept.getId(), 1);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptChildConcept, myConceptRootConcept);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptChildConcept;
      case 1:
        return myConceptRootConcept;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForChildConcept() {
    return new ConceptDescriptorBuilder("flow.structure.ChildConcept", MetaIdFactory.conceptId(0x3ac25d6afd494a5bL, 0x9c1ca6236d977d96L, 0x2068c047bc1763abL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x6390b7bde20a4b3eL, "range", new SNodePointer("r:5070082c-725d-4756-a585-26ca093eba5e(flow.structure)", "7174436232570227518")), new ConceptDescriptorBuilder.Prop(0x6390b7bde21c7b1fL, "isvalid", new SNodePointer("r:5070082c-725d-4756-a585-26ca093eba5e(flow.structure)", "7174436232571419423"))).properties("range", "isvalid").sourceNode(new SNodePointer("r:5070082c-725d-4756-a585-26ca093eba5e(flow.structure)", "2335327821122462635")).create();
  }
  private static ConceptDescriptor createDescriptorForRootConcept() {
    return new ConceptDescriptorBuilder("flow.structure.RootConcept", MetaIdFactory.conceptId(0x3ac25d6afd494a5bL, 0x9c1ca6236d977d96L, 0x2068c047bc17596eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x2068c047bc1763d6L, "text", new SNodePointer("r:5070082c-725d-4756-a585-26ca093eba5e(flow.structure)", "2335327821122462678"))).properties("text").childDescriptors(new ConceptDescriptorBuilder.Link(0x2068c047bc1763eaL, "two", MetaIdFactory.conceptId(0x3ac25d6afd494a5bL, 0x9c1ca6236d977d96L, 0x2068c047bc1763abL), true, true, false, new SNodePointer("r:5070082c-725d-4756-a585-26ca093eba5e(flow.structure)", "2335327821122462698"))).children(new String[]{"two"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:5070082c-725d-4756-a585-26ca093eba5e(flow.structure)", "2335327821122460014")).create();
  }
}
